buildscript {
    dependencies {
        classpath files('gradle/gradle-witness.jar')
    }
}

apply plugin: 'java'
apply plugin: 'witness'
apply plugin: 'maven-publish'

compileJava {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

version = "0.5.3"

repositories {
    mavenLocal()
    maven { url "http://4thline.org/m2" }
    maven { url 'https://mvn.freenetproject.org' }
    jcenter()
}

configurations {
    extraLibs
}

dependencies {
    compile group: 'org.freenetproject', name: 'fred', version: 'build+'
}

def gitrev
task buildInfo {
    try {
        def cmd = "git describe --always --abbrev=4 --dirty"
        def proc = cmd.execute()
        gitrev = proc.text.trim()
    } catch (java.io.IOException e) {
        gitrev = "@unknown@"
    }
}

jar {
    manifest {
        attributes 'Plugin-Main-Class': 'plugins.KeyUtils.KeyUtilsPlugin',
                   'Required-Node-Version': '1486',
                   'Implementation-Version': version,
                   'Built-By': System.getProperty('user.name'),
                   'Built-Date': new Date(),
                   'Built-JDK': System.getProperty('java.version')
    }
    from('rez') {
      include 'data/**/*'
    }
    from (configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    preserveFileTimestamps = false
    reproducibleFileOrder = true
    duplicatesStrategy = "exclude"
    archiveName = 'freenet-KeyUtils.jar'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'org.freenetproject.plugins'
            artifactId "KeyUtils"
            version version
            from components.java
        }
    }
    repositories {
        maven {
            url "s3://mvn.freenetproject.org/"
            credentials(AwsCredentials) {
                accessKey System.getenv('AWS_ACCESS_KEY_ID')
                secretKey System.getenv('AWS_SECRET_ACCESS_KEY')
            }
        }
    }
}
